
import java.util.HashMap;
import java.util.ArrayList;
public class Solution {
	public static ArrayList<Integer> longestConsecutiveIncreasingSequence(int[] arr) {
		//Your Code goes here
        ArrayList<Integer> memory=new ArrayList<Integer>();
        
        
        HashMap<Integer,Integer> map=new HashMap<>();
        
         HashMap<Integer,Boolean> map1=new HashMap<>();
        
        
        for(int i=0;i<arr.length;i++){
            
            if(!map.containsKey(arr[i])){
                
                map.put(arr[i],i);
                  map1.put(arr[i],true);
            }
        }
        
      //  int counter=0;
        int start=0;
        int max=0;
        for(int i=0;i<arr.length;i++){
            int j=arr[i];
            int k=arr[i]-1;
            int counter=0;
            
              while(map.containsKey(j) && map1.get(j)){
                map1.put(j,false);
                j++;
                counter++;
                
            }
            
            while(map.containsKey(k) && map1.get(k)){
                 map1.put(k,false);
                k--;
                counter++;
            }
           // while(map.containsKey(j)){
             //   j++;
               // counter++;
                
            //}
            
          //  while(map.containsKey(k)){
            //    k--;
              //  counter++;
            //}
            if(max<counter){
               start=k+1;
               max=counter; 
                
            }
            else if(max == counter)
            {
                int v1=map.get(k+1);
                int v2=map.get(start);
                if(v1<v2)
                {
                    start=k+1;
                    max=counter;
                }
            }
        }
        
        
      for(int i=0;i<max;i++){
          
          memory.add(start++);
      }
         
        return memory;
	}
}
